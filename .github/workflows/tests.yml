name: Tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - run: npm ci

      - run: npm run lint

  tests-local:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      # Note this is the way to set an environment variable that lives across
      # all steps
      # (https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable).
      - name: Set environment variables
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.playwright" >> $GITHUB_ENV

      # Cache all of our node_modules/ directories and playwright browser
      # binaries to save ~30 seconds of install time.
      - name: Restore node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
            ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          # Bump the number after `lit-node-modules` to force a cache update
          # Note there are cache actions in below in `tests-sauce` and in `benchmarks.yml`
          # that should all keep keys in sync
          key: lit-node-modules-0-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      # Installs system dependencies needed for playwright. Not sure how to
      # cache this.
      - uses: microsoft/playwright-github-action@v1

      - name: NPM install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lerna bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm run bootstrap

      - name: Build
        run: npm run build

      - name: Test
        env:
          BROWSERS: preset:local
          CONCURRENT_BROWSERS: 3
        run: npm run test

  tests-sauce:
    # We can't run Sauce tests on PRs from forked repos, since they don't have
    # access to secrets.
    if: github.event.pull_request == null || github.event.pull_request.head.repo.full_name == github.repository

    # Sauce tests are still unreliable. Run them, but don't mark a commit as
    # failing if it fails.
    continue-on-error: true

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      # Note this is the way to set an environment variable that lives across
      # all steps
      # (https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable).
      - name: Set environment variables
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.playwright" >> $GITHUB_ENV

      # Cache all of our node_modules/ directories and playwright browser
      # binaries to save ~30 seconds of install time.
      - name: Restore node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
            ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          # Bump the number after `lit-node-modules` to force a cache update
          # Note there are cache actions in above in `tests-local` and in `benchmarks.yml`
          # that should all keep keys in sync
          key: lit-node-modules-0-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      # Installs system dependencies needed for playwright. Not sure how to
      # cache this.
      - uses: microsoft/playwright-github-action@v1

      - name: NPM install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lerna bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm run bootstrap

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Test
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          BROWSERS: preset:sauce
          # TODO We should be able to bump this up, but going above 2 currently
          # causes flakiness where the second test job (dev vs prod) fails to
          # set up the Sauce tunnel (maybe something to do with browsers still
          # shutting down on the Sauce VM from the previous run?).
          CONCURRENT_BROWSERS: 2
        run: npm run test
